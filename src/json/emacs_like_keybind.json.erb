{
  "title": "Emacs like key_bind",
  "rule_list": false,
  "make_extra_description": true,
  "rules": [
		{
			"description": "Show Desktop(control-x control-d)",
      "extra_descriptions": [
        "This key_bind is sample.",
        "このキーバインドはサンプルです。"
      ],
			"manipulators": [
        {
          <%# control-x control-dを正しく押していた時の設定 %>
          "type": "basic",
          "from": <%= from("x", ["control"], ["any"]) %>,
          <%# control-xを押した状態を次のアクションに伝える %>
          "to": [
            {"set_variable": { "name": "press_control_x_key", "value": 1}}
          ],
          "to_if_alone": [
            <%= to([["x"]]) %>
          ],
          "conditions": [
            {"type": "variable_if", "name": "press_control_x_key", "value": 0}
          ]
        },
        {
          "type": "basic",
          "from": <%= from("d", ["control"], ["any"]) %>,
          <%# control-x control-dキーで押したときは、デスクトップを表示する %>
          "to": <%= to([["vk_mission_control", ["command"]]]) %>,
          <%# control-x control-dを正しく押したことを結果に残す %>
          "to_after_key_up": [
            {"set_variable": { "name": "press_control_x_key", "value": 0}}
          ],
          "conditions": [
            {"type": "variable_if", "name": "press_control_x_key", "value": 1}
          ]
        },
        <%# source_keysは、まずタイプする可能性のあるキーを全て列挙 %>
        <%# used_keysは、ここから上で設定済みのキーを列挙 %>
        <%# source_keysからused_keysを差し引いてタイプミス処理をコーディング %>
        <%# 現在のerb2json.rbには、set_variableやvariable_ifを処理する関数がないので、やむなく、each_keyを使わずに、Rubyのコードを直書きして対処している。 %>
        <%=
          source_keys = [ "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "w", "v", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
          used_keys = [ "d" ]
          modifier_keys = ["contorl", "any"]
          used_keys.each do | used_key |
            source_keys.delete(used_key)
          end

          types = ""
          for source_key in source_keys do
            types += "{
              \"type\": \"basic\",
              \"from\": #{from(source_key, modifier_keys[0], modifier_keys[1])},
              \"to\": [#{set_variable(["press_control_x_key"], [0])}],
              \"to_if_alone\": [#{to([source_key])}, [#{set_variable(["press_control_x_key"], [0])}]],
              \"conditions\": [#{variable_if(["press_control_x_key"], [1])} ]
            },"
          end
          types.chop!
          types
        %>
        ]
      }
  ]
}
