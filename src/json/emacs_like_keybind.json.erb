{
  "title": "Two stroke key_bind",
  "rule_list": false,
  "make_extra_description": true,
  "rules": [
		{
			"description": "Two stroke key_bind",
      "extra_descriptions": [
        "This key_bind is sample.",
        "このキーバインドはサンプルです。",
        "",
        "Show Desktop(control-x control-d)",
        "Open Chrome(control-x c)"
      ],
			"manipulators": [
        {
          "type": "basic",
          "from": <%= from("x", ["control"], ["any"]) %>,
          <%# control-xを押した状態を次のアクションに伝える %>
          "to": [
            {"set_variable": { "name": "press_control_x_key", "value": 1}}
          ],
          "to_if_alone": [
            <%= to([["x"]]) %>
          ],
          "conditions": [
            {"type": "variable_if", "name": "press_control_x_key", "value": 0}
          ]
        },
        {
          "type": "basic",
          "from": <%= from("d", ["control"], ["any"]) %>,
          <%# control-x control-dキーで押したときは、デスクトップを表示する %>
          "to": <%= to([["vk_mission_control", ["command"]]]) %>,
          <%# control-x control-dを正しく押したことを結果に残す %>
          "to_after_key_up": [
            {"set_variable": { "name": "press_control_x_key", "value": 0}}
          ],
          "conditions": [
            {"type": "variable_if", "name": "press_control_x_key", "value": 1}
          ]
        },
        {
          "type": "basic",
          "from": <%= from("c", [], ["any"]) %>,
          <%# control-x control-dキーで押したときは、デスクトップを表示する %>
          "to": [{"shell_command": "open -a 'Google Chrome.app'"}],
          <%# control-x cを正しく押したことを結果に残す %>
          "to_after_key_up": [
            {"set_variable": { "name": "press_control_x_key", "value": 0}}
          ],
          "conditions": [
            {"type": "variable_if", "name": "press_control_x_key", "value": 1}
          ]
        },
        <%# source_keysは、まずタイプする可能性のあるキーを全て列挙 %>
        <%# https://github.com/tekezo/Karabiner-Elements/blob/8cb8781937246a120acf3b29e9079be81334ed2d/src/share/types.hpp#L104-L234よりキーは入手 %>
        <%# used_keysは、ここから上で設定済みのキーを列挙 %>
        <%# source_keysからused_keysを差し引いてタイプミス処理をコーディング %>
        <%# set_variableとvariable_if関数は自作 %>
        <%# control-xをこのキー変換モードのトグルにしているため、source_keysから"left_control", "right_control"は除いている %>
        <%=
          source_keys = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "return_or_enter", "escape", "delete_or_backspace", "tab", "spacebar", "caps_lock", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", "f19", "f20", "f21", "f22", "f23", "f24", "right_arrow", "left_arrow", "down_arrow", "up_arrow", "keypad_slash", "keypad_asterisk", "keypad_hyphen", "keypad_plus", "keypad_enter", "keypad_1", "keypad_2", "keypad_3", "keypad_4", "keypad_5", "keypad_6", "keypad_7", "keypad_8", "keypad_9", "keypad_0", "keypad_period", "keypad_equal_sign", "keypad_comma", "home", "page_up", "delete_forward", "end", "page_down", "mute", "volume_decrement", "volume_increment", "left_shift", "left_option", "left_command", "right_shift", "right_option", "right_command", "fn", "display_brightness_decrement", "display_brightness_increment", "dashboard", "launchpad", "mission_control", "illumination_decrement", "illumination_increment", "rewind", "play_or_pause", "fastforward", "eject", "apple_display_brightness_decrement", "apple_display_brightness_increment", "apple_top_case_display_brightness_decrement", "apple_top_case_display_brightness_increment"]
          used_keys = ["c", "d"]
          modifier_keys = ["contorl", "any"]
          used_keys.each do | used_key |
            source_keys.delete(used_key)
          end

          types = ""
          for source_key in source_keys do
            types += "{
              \"type\": \"basic\",
              \"from\": #{from(source_key, modifier_keys[0], modifier_keys[1])},
              \"to\": [#{set_variable(["press_control_x_key"], [0])}],
              \"to_if_alone\": [#{to([source_key])}, [#{set_variable(["press_control_x_key"], [0])}]],
              \"conditions\": [#{variable_if(["press_control_x_key"], [1])} ]
            },"
          end
          types.chop!
          types
        %>
        ]
      }
  ]
}
